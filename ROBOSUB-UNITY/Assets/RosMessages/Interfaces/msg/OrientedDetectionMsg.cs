//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Interfaces
{
    [Serializable]
    public class OrientedDetectionMsg : Message
    {
        public const string k_RosMessageName = "interfaces/OrientedDetection";
        public override string RosMessageName => k_RosMessageName;

        public Yolov8DetectionMsg detection;
        public Geometry.QuaternionMsg orientation;

        public OrientedDetectionMsg()
        {
            this.detection = new Yolov8DetectionMsg();
            this.orientation = new Geometry.QuaternionMsg();
        }

        public OrientedDetectionMsg(Yolov8DetectionMsg detection, Geometry.QuaternionMsg orientation)
        {
            this.detection = detection;
            this.orientation = orientation;
        }

        public static OrientedDetectionMsg Deserialize(MessageDeserializer deserializer) => new OrientedDetectionMsg(deserializer);

        private OrientedDetectionMsg(MessageDeserializer deserializer)
        {
            this.detection = Yolov8DetectionMsg.Deserialize(deserializer);
            this.orientation = Geometry.QuaternionMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.detection);
            serializer.Write(this.orientation);
        }

        public override string ToString()
        {
            return "OrientedDetectionMsg: " +
            "\ndetection: " + detection.ToString() +
            "\norientation: " + orientation.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
